name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Run image
      uses: abatilo/actions-poetry@v2
    - name: Setup a local virtual environment
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Cache the virtual environment
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Update version
      run: |
        TAG_VERSION=$(echo "${{ github.event_name }}" | grep -oE "v[0-9]+\.[0-9]+\.[0-9]+")
        if [ -n "$TAG_VERSION" ]; then
          sed -i "s/version = \".*\"/version = \"${TAG_VERSION}\"/" pyproject.toml
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git add pyproject.toml
          git commit -m "Update version to ${TAG_VERSION}"
          git push
        else
          echo "Not a release tag. No version update."
          exit 1
        fi
    - name: Build package
      run: poetry build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@v1.8.11
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
